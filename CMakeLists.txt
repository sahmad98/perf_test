cmake_minimum_required(VERSION 3.10)

project(PerfTest)

set(LOCAL "/usr/local/include")
set(CMAKE_CXX_STANDARD 11)
add_definitions("-msse4 -g")
set(SOURCE ${PROJECT_SOURCE_DIR}/src)
#set(EXECUTABLE_OUTPUT_PATH bin)
include_directories(${LOCAL})

add_executable(RowColumnAccess ${SOURCE}/array_access_test.cpp)
target_link_libraries(RowColumnAccess PRIVATE "${LOCAL}/../lib/libbenchmark.a")
add_executable(CPUPinning ${SOURCE}/cpu_pinning.cpp)
add_executable(FileReadPerf ${SOURCE}/memory_mapped_io.cpp)
add_executable(GoogleBench ${SOURCE}/google_benchmark.cpp)
target_link_libraries(GoogleBench PRIVATE "${LOCAL}/../lib/libbenchmark.a")
add_executable(CachePerf ${SOURCE}/cache_perf.cpp)
target_link_libraries(CachePerf PRIVATE "${LOCAL}/../lib/libbenchmark.a")
add_executable(AtomicPerf ${SOURCE}/atomic_perf.cpp)
target_link_libraries(AtomicPerf PRIVATE "${LOCAL}/../lib/libbenchmark.a")
add_executable(VectorizedTest ${SOURCE}/vectorized_test.cpp)
target_link_libraries(VectorizedTest PRIVATE "${LOCAL}/../lib/libbenchmark.a")
add_executable(MiscPerf ${SOURCE}/misc_perf.cpp)
target_link_libraries(MiscPerf PRIVATE "${LOCAL}/../lib/libbenchmark.a")
add_executable(LockPerf ${SOURCE}/lock_benchmark.cpp)
target_link_libraries(LockPerf PRIVATE "${LOCAL}/../lib/libbenchmark.a")
